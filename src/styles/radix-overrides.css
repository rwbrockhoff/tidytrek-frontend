/* Radix UI Component Overrides */

.radix-themes {
	height: 100%;
}

/* Match TextArea to TextField Input */
.rt-TextAreaInput {
	background: var(--color-bg-primary);
	color: var(--color-text-primary);
	border: 1px solid var(--color-bg-tertiary);
}

/* TextField */
.rt-TextFieldInput {
	background: var(--color-bg-primary);
	color: var(--color-text-primary);
	border: 1px solid var(--color-bg-tertiary);
	text-indent: var(--space-xs);
}

.rt-TextFieldInput::placeholder {
	color: var(--color-text-secondary);
	opacity: 0.7;
}

/* Lighter text color for placeholders and input labels */
.rt-TextFieldRoot .rt-Text[data-accent-color] {
	color: var(--color-text-tertiary);
}

.rt-TextFieldInput:hover:not(:focus) {
	border: 1px solid transparent;
	outline: 1px solid var(--color-primary);
}

.rt-TextFieldInput:focus {
	border: 1px solid var(--color-primary);
	border-radius: var(--radius);
	box-shadow: none;
	outline: none;
	transition: none;
}

/* Override Radix input defaults to minimal styles with hidden borders */
.rt-TableBody .rt-TextFieldInput.input-minimal,
.rt-TextFieldInput.input-minimal {
	border: var(--text-field-border-width, 1px) solid var(--color-bg-secondary);
	box-shadow: none;
	outline: none;
	background-color: var(--color-bg-secondary);
	color: var(--color-text-primary);
}

.rt-TableBody .rt-TextFieldInput.input-minimal::placeholder,
.rt-TextFieldInput.input-minimal::placeholder {
	color: var(--color-text-secondary);
	opacity: 0.7;
}

.rt-TableBody .rt-TextFieldInput.input-minimal:hover:not(:focus),
.rt-TextFieldInput.input-minimal:hover:not(:focus) {
	background-color: var(--color-bg-secondary);
	border-color: var(--color-bg-tertiary);
	outline: none;
	box-shadow: none;
}

.rt-TableBody .rt-TextFieldInput.input-minimal:focus,
.rt-TextFieldInput.input-minimal:focus {
	background-color: var(--color-bg-secondary);
	border-color: var(--color-primary);
	border-radius: var(--radius);
	outline: none;
	box-shadow: none;
}

/* -- Buttons -- */
button.rt-Button {
	color: var(--color-constant-white);
}

button.rt-Button.rt-variant-ghost {
	color: inherit;
}

button.rt-Button.rt-variant-outline {
	color: var(--color-text-tertiary);
	box-shadow: inset 0 0 0 1px var(--color-text-tertiary);
}

/* -- Modal -- */
.rt-DialogContent {
	background-color: var(--color-bg-primary);
	color: var(--color-text-primary);
}

/* -- Hide hover styles for disabled input -- */
.rt-TextFieldInput.input-minimal:disabled:hover:not(:focus) {
	background-color: var(--color-bg-primary);
	border-color: var(--color-bg-primary);
}

/* -- Popovers -- */
.rt-PopoverContent {
	background-color: var(--color-bg-primary);
	box-shadow: var(--shadow-2);
}

/* TextArea states */
.rt-TextAreaRoot > textarea.rt-TextAreaInput:hover:not(:focus) {
	border: 1px solid transparent;
	outline: 1px solid var(--color-primary);
}

.rt-TextAreaRoot > textarea.rt-TextAreaInput:focus {
	border: 2px solid var(--color-primary);
	outline: none;
	box-shadow: none;
}

/* Badge */
.rt-Badge {
	background-color: var(--color-bg-tertiary);
	color: var(--color-text-secondary);
	margin: inherit 1rem;
}

/* Table */
/* Match theme background on drag & drop */
.rt-TableRootTable tbody {
	background-color: var(--color-bg-secondary);
}

.rt-TextFieldSlot {
	color: var(--color-text-primary);
	height: 90%;
	margin: auto;
	margin-left: var(--space-min);
}

/* TextField with icons - specific class for search inputs */
.rt-TextFieldRoot:has(.input-with-icon),
.rt-TextFieldRoot:has(.input-with-icon) > * {
	background-color: var(--color-bg-primary);
}

.rt-TextFieldRoot:has(.input-with-icon) {
	border: 1px solid var(--color-bg-tertiary);
	border-radius: var(--radius);
}

.rt-TextFieldRoot:has(.input-with-icon):hover:not(:focus-within) {
	border: 1px solid var(--color-bg-tertiary);
}

.rt-TextFieldRoot:has(.input-with-icon):focus-within {
	border: 1px solid var(--color-primary);
	border-radius: var(--radius);
}

.rt-TextFieldInput.input-with-icon {
	border: none;
	background-color: transparent;
	outline: none;
	text-indent: var(--space-xs);
}

.rt-TextFieldInput.input-with-icon:hover:not(:focus) {
	border: none;
	outline: none;
	box-shadow: none;
}

.rt-TextFieldInput.input-with-icon:focus {
	border: none;
	outline: none;
	box-shadow: none;
	border-radius: none;
}

/* Ensures table background matches theme for drag and drop */
table {
	background-color: var(--color-bg-secondary);
}

/* HoverCard */
.rt-HoverCardContent {
	background-color: var(--color-bg-secondary);
}

/* Dropdown Menus */
.rt-SelectTrigger.dropdown-primary {
	background-color: var(--color-bg-primary);
	border: 1px solid var(--color-bg-tertiary);
	color: var(--color-text-primary);
}

.rt-SelectTrigger.dropdown-primary:hover {
	border-color: var(--color-primary);
}

.rt-SelectTrigger.dropdown-secondary {
	background-color: var(--color-bg-secondary);
	border: 1px solid var(--color-bg-tertiary);
	color: var(--color-text-primary);
}

.rt-SelectTrigger.dropdown-secondary:hover {
	border-color: var(--color-primary);
}

/* Removes excessive border emphasis on focus-active for Radix Select */
.rt-SelectTrigger.dropdown-primary:focus-visible,
.rt-SelectTrigger.dropdown-secondary:focus-visible {
	outline-offset: 0;
}

/* Select Content */
.rt-SelectContent {
	background-color: var(--color-bg-primary);
	border: 1px solid var(--color-bg-tertiary);
	box-shadow: var(--shadow-lg);
}

.rt-SelectItem {
	color: var(--color-text-primary);
}

.rt-SelectItem:hover {
	background-color: var(--color-bg-secondary);
}

.rt-SelectItem[data-highlighted] {
	background-color: var(--color-bg-secondary);
	outline: none;
}

.rt-SelectLabel {
	color: var(--color-text-secondary);
}

/* Form validation styling */
input[data-invalid='true'] {
	border: 1px solid var(--red-500);
	background-color: var(--color-error-bg);
}

/* Override deeply nested inline styles from Radix */
.rt-ScrollAreaRoot {
	overflow: visible;
}

div.rt-ScrollAreaViewport {
	overflow: visible !important;
}

.rt-TableRoot {
	overflow: visible !important;
}

.rt-TableRoot:where(.rt-variant-surface) :where(.rt-TableRootTable) {
	overflow: visible !important;
}

/* React Beautiful DnD placeholder styling */
.rt-TableBody tr:has([data-rbd-placeholder-context-id]),
.rt-TableBody tr[data-rbd-placeholder-context-id] {
	background-color: var(--color-bg-secondary) !important;
}

.rt-TableBody tr:has([data-rbd-placeholder-context-id]) td,
.rt-TableBody tr[data-rbd-placeholder-context-id] td {
	background-color: var(--color-bg-secondary) !important;
}

/* Override Radix selection styles */
.radix-themes *::selection {
	background-color: var(--sage-400);
	color: var(--color-constant-white);
}
